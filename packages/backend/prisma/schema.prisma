datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                Int                 @id @default(autoincrement())
  name              String
  email             String              @unique
  departmentId      Int
  profileImage      String?
  birthdate         DateTime?
  department        Department          @relation(fields: [departmentId], references: [id])
  userProjects      UserProject[]
  userTags          UserTag[]
  notes             Note[]
  birthdayWishes    BirthdayWish[]
  PerformanceReview PerformanceReview[]
}

model Department {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model Project {
  id           Int           @id @default(autoincrement())
  name         String
  startDate    DateTime
  endDate      DateTime?
  userProjects UserProject[]
}

model UserProject {
  userId    Int
  projectId Int
  user      User    @relation(fields: [userId], references: [id])
  project   Project @relation(fields: [projectId], references: [id])

  @@id([userId, projectId])
}

model Tag {
  id       Int       @id @default(autoincrement())
  tagName  String
  userTags UserTag[]
}

model UserTag {
  userId Int
  tagId  Int
  user   User @relation(fields: [userId], references: [id])
  tag    Tag  @relation(fields: [tagId], references: [id])

  @@id([userId, tagId])
}

model Note {
  id      Int      @id @default(autoincrement())
  userId  Int
  content String
  date    DateTime @default(now())
  user    User     @relation(fields: [userId], references: [id])
}

model BirthdayWish {
  id            Int      @id @default(autoincrement())
  userId        Int
  scheduledDate DateTime
  status        Boolean  @default(false)
  user          User     @relation(fields: [userId], references: [id])
}

model PerformanceReview {
  id         Int      @id @default(autoincrement())
  userId     Int
  content    String
  reviewDate DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
}
